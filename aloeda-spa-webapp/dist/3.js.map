{"version":3,"sources":["webpack:///./src/component/label/label.js","webpack:///./src/component/label/label_redux.js","webpack:///./src/component/home/root.component.js","webpack:///./src/component/home/home.app.js"],"names":["Label","props","Container","Segment","Grid","columns","relaxed","Column","textAlign","Icon","name","Divider","vertical","mapDispatchToProps","increment","type","connect","state","count","initialState","store","createStore","action","console","log","App","className","message","home","singleSpaReact","React","ReactDOM","rootComponent","Home","domElementGetter","document","getElementById","bootstrap","mount","unmount"],"mappings":"0MA6BeA,EAxBD,SAACC,GAKX,OAAO,6BACH,6BACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,QAAQ,QACtB,kBAACF,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,SADf,oBAGA,kBAACN,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,cADf,mCAIJ,kBAACC,EAAA,EAAD,CAASC,UAAQ,GAAjB,UCRhB,IAAMC,EAAqB,CACvBC,UALG,WACH,MAAO,CAACC,KAAM,eAOHC,eAdf,SAAyBC,GACrB,MAAO,CACHC,MAAOD,EAAMC,SAYmBL,EAAzBG,CAA6ChB,G,QCbtDmB,EAAe,CACjBD,MAAO,GAmBX,IAAME,EAAQC,aAhBd,WAA+C,IAA9BJ,EAA8B,uDAAtBE,EAAcG,EAAQ,uCAE3C,OADAC,QAAQC,IAAI,UAAWP,EAAOK,GACtBA,EAAOP,MACX,IAAK,YACD,MAAO,CACHG,MAAOD,EAAMC,MAAQ,GAE7B,IAAK,YACD,MAAO,CACHA,MAAOD,EAAMC,MAAQ,GAE7B,QACI,OAAOD,MAcJQ,EARH,WACR,OAAO,yBAAKC,UAAU,aAClB,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,CAAOO,QAAQ,6BC9B3B,wHASA,IAAMC,EAAOC,IAAe,CACxBC,UACAC,aACAC,cAAeC,EACfC,iBARJ,WACI,OAAOC,SAASC,eAAe,WAUtBC,EAAY,CACrBT,EAAKS,WAEIC,EAAQ,CACjBV,EAAKU,OAEIC,EAAU,CACnBX,EAAKW","file":"3.js","sourcesContent":["import React from 'react';\nimport {\n    Divider, Grid, Icon, Image, Segment, Container, Table\n} from 'semantic-ui-react'\n\nconst Label = (props) => {\n    const clickHandler = () => {\n        props.increment()\n    };\n\n    return <div>\n        <br/>\n        <Container>\n            <Segment>\n                <Grid columns={2} relaxed='very'>\n                    <Grid.Column textAlign=\"center\">\n                        <Icon name=\"cogs\"/> Global Features\n                    </Grid.Column>\n                    <Grid.Column textAlign=\"center\">\n                        <Icon name=\"configure\"/> Application Specific Features\n                    </Grid.Column>\n                </Grid>\n                <Divider vertical>Or</Divider>\n            </Segment>\n\n        </Container>\n    </div>\n};\n\nexport default Label","import React from 'react'\nimport {connect} from 'react-redux';\nimport Label from \"./label\";\n\nfunction mapStateToProps(state) {\n    return {\n        count: state.count\n    };\n}\n\nexport function increment() {\n    return {type: 'INCREMENT'};\n}\n\nconst mapDispatchToProps = {\n    increment,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Label);\n","import React from \"react\";\nimport Label from \"../label/label_redux\";\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nconst initialState = {\n    count: 0\n};\n\nfunction reducer(state = initialState, action) {\n    console.log('reducer', state, action);\n    switch (action.type) {\n        case 'INCREMENT':\n            return {\n                count: state.count + 1\n            };\n        case 'DECREMENT':\n            return {\n                count: state.count - 1\n            };\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer);\n\nconst App = () => {\n    return <div className=\"container\">\n        <Provider store={store}>\n            <Label message=\"You are welcome now..\"/>\n        </Provider>\n    </div>\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport singleSpaReact from 'single-spa-react';\nimport Home from './root.component.js';\n\nfunction domElementGetter() {\n    return document.getElementById(\"home\")\n}\n\nconst home = singleSpaReact({\n    React,\n    ReactDOM,\n    rootComponent: Home,\n    domElementGetter,\n});\n\nexport const bootstrap = [\n    home.bootstrap,\n];\nexport const mount = [\n    home.mount,\n];\nexport const unmount = [\n    home.unmount,\n];"],"sourceRoot":""}
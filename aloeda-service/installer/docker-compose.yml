version: '3.7'

services:

  zoo1:
    container_name: "app_zookeeper"
    image: zookeeper:3.4.9
    hostname: zoo1
    expose:
      - "2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - /data
      - /datalog
    networks:
      - springboot-network

  kafka1:
    container_name: "app_kafka"
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka1
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - springboot-network

  app-db:
    container_name: "app_db"
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=aloeda
    networks:
      - springboot-network

  nginx-lb:
    container_name: "app_gateway"
    build: nginx
    ports:
      - "80:80"
    depends_on:
      - app_1
      - app_2
    networks:
      - springboot-network

  app_1:
    container_name: "app_1"
    build: ../
    ports:
      - "12345"
    environment:
      - ALOEDA_DB_HOST=app-db
      - APP_NAME=instance-1
      - ALOEDA_KAFKA_HOST=kafka1:9092
    depends_on:
      - app-db
      - kafka1
    networks:
      - springboot-network

  app_2:
    container_name: "app_2"
    build: ../
    ports:
      - "12345"
    environment:
      - ALOEDA_DB_HOST=app-db
      - APP_NAME=instance-2
      - ALOEDA_KAFKA_HOST=kafka1:9092
    depends_on:
      - app-db
      - kafka1
    networks:
      - springboot-network

volumes:
  my-db:

networks:
  springboot-network:
    driver: bridge
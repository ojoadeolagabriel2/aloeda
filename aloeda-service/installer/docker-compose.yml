version: '3.7'

services:
  app_redis:
    container_name: app_redis
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=my_master_password
    ports:
      - "6379:6379"
    networks:
      - springboot-network

  app_redis_replica:
    image: 'bitnami/redis:latest'
    ports:
      - '6379'
    depends_on:
      - app_redis
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_MASTER_PASSWORD=my_master_password
      - REDIS_PASSWORD=my_replica_password
    networks:
      - springboot-network

  zookeeper1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - springboot-network
    ports:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: ${KAFKA_HOSTNAME:-kafka1}
    depends_on:
      - zookeeper1
    networks:
      - springboot-network
    ports:
      - "9096:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOSTNAME:-kafka1}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOSTNAME:-kafka1}:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  app-db:
    container_name: "app_db"
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=aloeda
    networks:
      - springboot-network

  nginx-lb:
    container_name: "app_gateway"
    build: nginx
    ports:
      - "80:80"
    depends_on:
      - app_1
      - app_2
    networks:
      - springboot-network

  app_1:
    container_name: "app_1"
    build: ../
    ports:
      - "12345"
    environment:
      - ALOEDA_DB_HOST=app-db
      - APP_NAME=instance-1
      - ALOEDA_KAFKA_HOST=kafka1:9092
    depends_on:
      - app-db
      - kafka1
    networks:
      - springboot-network

  app_2:
    container_name: "app_2"
    build: ../
    ports:
      - "12345"
    environment:
      - ALOEDA_DB_HOST=app-db
      - APP_NAME=instance-2
      - ALOEDA_KAFKA_HOST=kafka1:9092
    depends_on:
      - app-db
      - kafka1
    networks:
      - springboot-network

volumes:
  my-db:

networks:
  springboot-network:
    driver: bridge